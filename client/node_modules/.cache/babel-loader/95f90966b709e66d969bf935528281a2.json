{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\components\\\\collection-item\\\\collection-item.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addItemToCartAction } from '../../redux/cart/cart.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({\n  item,\n  addItemToCart\n}) => {\n  const {\n    name,\n    price,\n    imageUrl\n  } = item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, `$${price}`)), /*#__PURE__*/React.createElement(CustomButton, {\n    handleClick: () => addItemToCart(item),\n    type: \"button\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }, \"Add to cart\"));\n};\n\nCollectionItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string.isRequired\n  }).isRequired,\n  addItemToCart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItemToCart: item => dispatch(addItemToCartAction(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","PropTypes","connect","addItemToCartAction","CustomButton","CollectionItem","item","addItemToCart","name","price","imageUrl","backgroundImage","propTypes","shape","string","isRequired","number","func","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,+BAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA6B;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BJ,IAAlC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,eAAe,EAAG,OAAMD,QAAS;AAAnC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADD,eAEC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,IAAGC,KAAM,EAAnC,CAFD,CAFD,eAMC,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAE,MAAMF,aAAa,CAACD,IAAD,CAA9C;AAAsD,IAAA,IAAI,EAAC,QAA3D;AAAoE,IAAA,QAAQ,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAND,CADD;AAUA,CAbD;;AAeAD,cAAc,CAACO,SAAf,GAA2B;AAC1BN,EAAAA,IAAI,EAAEL,SAAS,CAACY,KAAV,CAAgB;AACrBL,IAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADF;AAErBN,IAAAA,KAAK,EAAER,SAAS,CAACe,MAAV,CAAiBD,UAFH;AAGrBL,IAAAA,QAAQ,EAAET,SAAS,CAACa,MAAV,CAAiBC;AAHN,GAAhB,EAIHA,UALuB;AAM1BR,EAAAA,aAAa,EAAEN,SAAS,CAACgB,IAAV,CAAeF;AANJ,CAA3B;;AASA,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACzCZ,EAAAA,aAAa,EAAGD,IAAD,IAAUa,QAAQ,CAAChB,mBAAmB,CAACG,IAAD,CAApB;AADQ,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCb,cAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addItemToCartAction } from '../../redux/cart/cart.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({ item, addItemToCart }) => {\n\tconst { name, price, imageUrl } = item;\n\n\treturn (\n\t\t<div className=\"collection-item\">\n\t\t\t<div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\n\t\t\t<div className=\"collection-footer\">\n\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t<span className=\"price\">{`$${price}`}</span>\n\t\t\t</div>\n\t\t\t<CustomButton handleClick={() => addItemToCart(item)} type=\"button\" inverted>Add to cart</CustomButton>\n\t\t</div>\n\t);\n};\n\nCollectionItem.propTypes = {\n\titem: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tprice: PropTypes.number.isRequired,\n\t\timageUrl: PropTypes.string.isRequired,\n\t}).isRequired,\n\taddItemToCart: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\taddItemToCart: (item) => dispatch(addItemToCartAction(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"]},"metadata":{},"sourceType":"module"}