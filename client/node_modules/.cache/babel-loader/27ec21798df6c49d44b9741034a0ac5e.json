{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\components\\\\collections-overview\\\\collections-overview.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectShopCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport './collections-overview.styles.scss';\n\nconst CollectionsOverview = ({\n  collections\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"collections-overview\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 2\n  }\n}, collections.map(({\n  id,\n  title,\n  items,\n  routeName\n}) => /*#__PURE__*/React.createElement(CollectionPreview, {\n  key: id,\n  title: title,\n  items: items,\n  routeName: routeName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }\n})));\n\nCollectionsOverview.propTypes = {\n  collections: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    routeName: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired\n    }).isRequired).isRequired\n  }).isRequired).isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  collections: selectShopCollectionsForPreview\n});\nexport default connect(mapStateToProps)(CollectionsOverview);","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/components/collections-overview/collections-overview.component.jsx"],"names":["React","PropTypes","connect","createStructuredSelector","selectShopCollectionsForPreview","CollectionPreview","CollectionsOverview","collections","map","id","title","items","routeName","propTypes","arrayOf","shape","string","isRequired","number","name","imageUrl","price","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,+BAAT,QAAgD,iCAAhD;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAO,oCAAP;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC3B;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEEA,WAAW,CAACC,GAAZ,CAAgB,CAAC;AAChBC,EAAAA,EADgB;AACZC,EAAAA,KADY;AACLC,EAAAA,KADK;AACEC,EAAAA;AADF,CAAD,kBAEV,oBAAC,iBAAD;AAAmB,EAAA,GAAG,EAAEH,EAAxB;AAA4B,EAAA,KAAK,EAAEC,KAAnC;AAA0C,EAAA,KAAK,EAAEC,KAAjD;AAAwD,EAAA,SAAS,EAAEC,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFN,CAFF,CADD;;AAUAN,mBAAmB,CAACO,SAApB,GAAgC;AAC/BN,EAAAA,WAAW,EAAEN,SAAS,CAACa,OAAV,CACZb,SAAS,CAACc,KAAV,CAAgB;AACfN,IAAAA,EAAE,EAAER,SAAS,CAACe,MAAV,CAAiBC,UADN;AAEfP,IAAAA,KAAK,EAAET,SAAS,CAACe,MAAV,CAAiBC,UAFT;AAGfL,IAAAA,SAAS,EAAEX,SAAS,CAACe,MAAV,CAAiBC,UAHb;AAIfN,IAAAA,KAAK,EAAEV,SAAS,CAACa,OAAV,CACNb,SAAS,CAACc,KAAV,CAAgB;AACfN,MAAAA,EAAE,EAAER,SAAS,CAACiB,MAAV,CAAiBD,UADN;AAEfE,MAAAA,IAAI,EAAElB,SAAS,CAACe,MAAV,CAAiBC,UAFR;AAGfG,MAAAA,QAAQ,EAAEnB,SAAS,CAACe,MAAV,CAAiBC,UAHZ;AAIfI,MAAAA,KAAK,EAAEpB,SAAS,CAACiB,MAAV,CAAiBD;AAJT,KAAhB,EAKGA,UANG,EAOLA;AAXa,GAAhB,EAYGA,UAbS,EAcXA;AAf6B,CAAhC;AAkBA,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAChDI,EAAAA,WAAW,EAAEH;AADmC,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAACoB,eAAD,CAAP,CAAyBhB,mBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectShopCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport './collections-overview.styles.scss';\n\nconst CollectionsOverview = ({ collections }) => (\n\t<div className=\"collections-overview\">\n\t\t{\n\t\t\tcollections.map(({\n\t\t\t\tid, title, items, routeName,\n\t\t\t}) => <CollectionPreview key={id} title={title} items={items} routeName={routeName} />)\n\t\t}\n\t</div>\n);\n\nCollectionsOverview.propTypes = {\n\tcollections: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t\trouteName: PropTypes.string.isRequired,\n\t\t\titems: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tid: PropTypes.number.isRequired,\n\t\t\t\t\tname: PropTypes.string.isRequired,\n\t\t\t\t\timageUrl: PropTypes.string.isRequired,\n\t\t\t\t\tprice: PropTypes.number.isRequired,\n\t\t\t\t}).isRequired,\n\t\t\t).isRequired,\n\t\t}).isRequired,\n\t).isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n\tcollections: selectShopCollectionsForPreview,\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n"]},"metadata":{},"sourceType":"module"}