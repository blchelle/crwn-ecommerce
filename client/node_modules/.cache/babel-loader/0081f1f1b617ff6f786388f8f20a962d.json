{"ast":null,"code":"/**\n * Insert a new item into the cart, if that item already exists in the cart\n * then simply increase the quantity of that item.\n * @param {object[]} existingItems All the items currently in the cart\n * @param {object} newItem The new item to add to the cart\n */\nexport const addItemToCart = (existingItems, newItem) => {\n  // Find the item in the cart that is the same as the new item\n  const existingCartItem = existingItems.find(item => item.id === newItem.id); // If an item is found then return the same cart with that one items quantity incremented\n\n  if (existingCartItem) {\n    return existingItems.map(item => {\n      if (item.id === existingCartItem.id) {\n        return { ...item,\n          quantity: item.quantity + 1\n        };\n      }\n\n      return item;\n    });\n  } // Otherwise return the same cart with the new item added onto the back\n\n\n  return [...existingItems, { ...newItem,\n    quantity: 1\n  }];\n};\n/**\n * Decrement the quantity of the cart item\n * @param {object[]} cartItems All the items currently in the cart\n * @param {object} itemToDecrement The item whose quantity we will decrement\n */\n\nexport const decrementItemQuantity = (cartItems, itemToDecrement) => cartItems.map(item => {\n  if (item.id === itemToDecrement.id && itemToDecrement.quantity > 1) {\n    return { ...itemToDecrement,\n      quantity: itemToDecrement.quantity - 1\n    };\n  }\n\n  return item;\n});","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","existingItems","newItem","existingCartItem","find","item","id","map","quantity","decrementItemQuantity","cartItems","itemToDecrement"],"mappings":"AAAA;;;;;;AAMA,OAAO,MAAMA,aAAa,GAAG,CAACC,aAAD,EAAgBC,OAAhB,KAA4B;AACxD;AACA,QAAMC,gBAAgB,GAAGF,aAAa,CAACG,IAAd,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAjD,CAAzB,CAFwD,CAIxD;;AACA,MAAIH,gBAAJ,EAAsB;AACrB,WAAOF,aAAa,CAACM,GAAd,CAAmBF,IAAD,IAAU;AAClC,UAAIA,IAAI,CAACC,EAAL,KAAYH,gBAAgB,CAACG,EAAjC,EAAqC;AACpC,eAAO,EAAE,GAAGD,IAAL;AAAWG,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,SAAP;AACA;;AAED,aAAOH,IAAP;AACA,KANM,CAAP;AAOA,GAbuD,CAexD;;;AACA,SAAO,CAAC,GAAGJ,aAAJ,EAAmB,EAAE,GAAGC,OAAL;AAAcM,IAAAA,QAAQ,EAAE;AAAxB,GAAnB,CAAP;AACA,CAjBM;AAmBP;;;;;;AAKA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,SAAD,EAAYC,eAAZ,KAAgCD,SAAS,CAACH,GAAV,CAAeF,IAAD,IAAU;AAC5F,MAAIA,IAAI,CAACC,EAAL,KAAYK,eAAe,CAACL,EAA5B,IAAkCK,eAAe,CAACH,QAAhB,GAA2B,CAAjE,EAAoE;AACnE,WAAO,EAAE,GAAGG,eAAL;AAAsBH,MAAAA,QAAQ,EAAEG,eAAe,CAACH,QAAhB,GAA2B;AAA3D,KAAP;AACA;;AAED,SAAOH,IAAP;AACA,CANoE,CAA9D","sourcesContent":["/**\n * Insert a new item into the cart, if that item already exists in the cart\n * then simply increase the quantity of that item.\n * @param {object[]} existingItems All the items currently in the cart\n * @param {object} newItem The new item to add to the cart\n */\nexport const addItemToCart = (existingItems, newItem) => {\n\t// Find the item in the cart that is the same as the new item\n\tconst existingCartItem = existingItems.find((item) => item.id === newItem.id);\n\n\t// If an item is found then return the same cart with that one items quantity incremented\n\tif (existingCartItem) {\n\t\treturn existingItems.map((item) => {\n\t\t\tif (item.id === existingCartItem.id) {\n\t\t\t\treturn { ...item, quantity: item.quantity + 1 };\n\t\t\t}\n\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t// Otherwise return the same cart with the new item added onto the back\n\treturn [...existingItems, { ...newItem, quantity: 1 }];\n};\n\n/**\n * Decrement the quantity of the cart item\n * @param {object[]} cartItems All the items currently in the cart\n * @param {object} itemToDecrement The item whose quantity we will decrement\n */\nexport const decrementItemQuantity = (cartItems, itemToDecrement) => cartItems.map((item) => {\n\tif (item.id === itemToDecrement.id && itemToDecrement.quantity > 1) {\n\t\treturn { ...itemToDecrement, quantity: itemToDecrement.quantity - 1 };\n\t}\n\n\treturn item;\n});\n"]},"metadata":{},"sourceType":"module"}