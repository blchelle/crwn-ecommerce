{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\pages\\\\checkout\\\\checkout.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './checkout.styles.scss';\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport StripeCheckoutButton from '../../components/stripe-checkout-button/stripe-checkout-button.component';\n\nconst CheckoutPage = ({\n  items,\n  total\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"checkout-page\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(\"table\", {\n  className: \"checkout-table\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"thead\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 6\n  }\n}, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 6\n  }\n}, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 6\n  }\n}, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 6\n  }\n}, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 6\n  }\n}, \"Remove\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 4\n  }\n}, items.map(item => /*#__PURE__*/React.createElement(CheckoutItem, {\n  key: item.id,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n})))), /*#__PURE__*/React.createElement(\"h2\", {\n  className: \"total-price\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, `Total: $${total}`), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"hint-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, \"*Please use the following test credit card for payments*\"), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"hint-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, \"4242 4242 4242 4242 \\u2014 Exp: Any future date \\u2014 CVC: Any 3 digits\"), /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n  price: total,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}));\n\nCheckoutPage.defaultProps = {\n  items: []\n};\nCheckoutPage.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    quantity: PropTypes.number.isRequired,\n    price: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired\n  }).isRequired),\n  total: PropTypes.number.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  items: selectCartItems,\n  total: selectCartTotal\n});\nexport default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/pages/checkout/checkout.component.jsx"],"names":["React","PropTypes","connect","createStructuredSelector","selectCartItems","selectCartTotal","CheckoutItem","StripeCheckoutButton","CheckoutPage","items","total","map","item","id","defaultProps","propTypes","arrayOf","shape","imageUrl","string","isRequired","name","quantity","number","price","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,wBAAP;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,iCAAjD;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,oBAAP,MAAiC,0EAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACpB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC;AAAO,EAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,CADD,CADD,eAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEED,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,oBAAC,YAAD;AAAc,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CAFF,CAVD,CADD,eAmBC;AAAI,EAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,WAAUF,KAAM,EADnB,CAnBD,eAsBC;AAAM,EAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAtBD,eAuBC;AAAM,EAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAvBD,eAwBC,oBAAC,oBAAD;AAAsB,EAAA,KAAK,EAAEA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBD,CADD;;AA6BAF,YAAY,CAACM,YAAb,GAA4B;AAC3BL,EAAAA,KAAK,EAAE;AADoB,CAA5B;AAIAD,YAAY,CAACO,SAAb,GAAyB;AACxBN,EAAAA,KAAK,EAAER,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,KAAV,CAAgB;AACxCC,IAAAA,QAAQ,EAAEjB,SAAS,CAACkB,MAAV,CAAiBC,UADa;AAExCC,IAAAA,IAAI,EAAEpB,SAAS,CAACkB,MAAV,CAAiBC,UAFiB;AAGxCE,IAAAA,QAAQ,EAAErB,SAAS,CAACsB,MAAV,CAAiBH,UAHa;AAIxCI,IAAAA,KAAK,EAAEvB,SAAS,CAACsB,MAAV,CAAiBH,UAJgB;AAKxCP,IAAAA,EAAE,EAAEZ,SAAS,CAACsB,MAAV,CAAiBH;AALmB,GAAhB,EAMtBA,UANI,CADiB;AAQxBV,EAAAA,KAAK,EAAET,SAAS,CAACsB,MAAV,CAAiBH;AARA,CAAzB;AAWA,MAAMK,eAAe,GAAGtB,wBAAwB,CAC/C;AACCM,EAAAA,KAAK,EAAEL,eADR;AAECM,EAAAA,KAAK,EAAEL;AAFR,CAD+C,CAAhD;AAOA,eAAeH,OAAO,CAACuB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './checkout.styles.scss';\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport StripeCheckoutButton from '../../components/stripe-checkout-button/stripe-checkout-button.component';\n\nconst CheckoutPage = ({ items, total }) => (\n\t<div className=\"checkout-page\">\n\t\t<table className=\"checkout-table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Product</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t<th>Quantity</th>\n\t\t\t\t\t<th>Price</th>\n\t\t\t\t\t<th>Remove</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{\n\t\t\t\t\titems.map((item) => (\n\t\t\t\t\t\t<CheckoutItem key={item.id} item={item} />\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</tbody>\n\t\t</table>\n\t\t<h2 className=\"total-price\">\n\t\t\t{`Total: $${total}`}\n\t\t</h2>\n\t\t<span className=\"hint-text\">*Please use the following test credit card for payments*</span>\n\t\t<span className=\"hint-text\">4242 4242 4242 4242 &mdash; Exp: Any future date &mdash; CVC: Any 3 digits</span>\n\t\t<StripeCheckoutButton price={total} />\n\t</div>\n);\n\nCheckoutPage.defaultProps = {\n\titems: [],\n};\n\nCheckoutPage.propTypes = {\n\titems: PropTypes.arrayOf(PropTypes.shape({\n\t\timageUrl: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\tquantity: PropTypes.number.isRequired,\n\t\tprice: PropTypes.number.isRequired,\n\t\tid: PropTypes.number.isRequired,\n\t}).isRequired),\n\ttotal: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector(\n\t{\n\t\titems: selectCartItems,\n\t\ttotal: selectCartTotal,\n\t},\n);\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"]},"metadata":{},"sourceType":"module"}