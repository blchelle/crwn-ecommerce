{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { firestore } from '../../firebase/firebase.utils';\nimport { selectShopCollection } from '../../redux/shop/shop.selectors';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport './collection.styles.scss';\n\nconst CollectionPage = ({\n  collection,\n  match\n}) => {\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      unsubscribeFromCollections();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, match.params.collectionId), collection.items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 36\n    }\n  })));\n};\n\nCollectionPage.propTypes = {\n  collection: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    routeName: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired\n    }).isRequired)\n  }).isRequired,\n  match: ReactRouterPropTypes.match.isRequired\n};\n\nconst mapStateToProps = (state, {\n  match: {\n    params: {\n      collectionId\n    }\n  }\n}) => ({\n  collection: selectShopCollection(collectionId)(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(CollectionPage));","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","PropTypes","ReactRouterPropTypes","connect","withRouter","firestore","selectShopCollection","CollectionItem","CollectionPage","collection","match","unsubscribeFromCollections","onSnapshot","snapshot","console","log","params","collectionId","items","map","item","id","propTypes","shape","string","isRequired","title","routeName","arrayOf","number","name","imageUrl","price","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,OAAO,0BAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AACjDV,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,0BAA0B,GAAGN,SAAS,CAACI,UAAV,CAAqB,aAArB,EAAoCG,UAApC,CAAgDC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAA7D,CAAnC;AACA,WAAO,MAAM;AACZF,MAAAA,0BAA0B;AAC1B,KAFD;AAGA,GALQ,EAKN,EALM,CAAT;AAOA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAK,CAACM,MAAN,CAAaC,YAApC,CADD,EAGER,UAAU,CAACS,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,iBAAU,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CAHF,CADD;AAQA,CAhBD;;AAmBAZ,cAAc,CAACc,SAAf,GAA2B;AAC1Bb,EAAAA,UAAU,EAAER,SAAS,CAACsB,KAAV,CAAgB;AAC3BF,IAAAA,EAAE,EAAEpB,SAAS,CAACuB,MAAV,CAAiBC,UADM;AAE3BC,IAAAA,KAAK,EAAEzB,SAAS,CAACuB,MAAV,CAAiBC,UAFG;AAG3BE,IAAAA,SAAS,EAAE1B,SAAS,CAACuB,MAAV,CAAiBC,UAHD;AAI3BP,IAAAA,KAAK,EAAEjB,SAAS,CAAC2B,OAAV,CACN3B,SAAS,CAACsB,KAAV,CAAgB;AACfF,MAAAA,EAAE,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBJ,UADN;AAEfK,MAAAA,IAAI,EAAE7B,SAAS,CAACuB,MAAV,CAAiBC,UAFR;AAGfM,MAAAA,QAAQ,EAAE9B,SAAS,CAACuB,MAAV,CAAiBC,UAHZ;AAIfO,MAAAA,KAAK,EAAE/B,SAAS,CAAC4B,MAAV,CAAiBJ;AAJT,KAAhB,EAKGA,UANG;AAJoB,GAAhB,EAYTA,UAbuB;AAc1Bf,EAAAA,KAAK,EAAER,oBAAoB,CAACQ,KAArB,CAA2Be;AAdR,CAA3B;;AAiBA,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQ;AAAExB,EAAAA,KAAK,EAAE;AAAEM,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV;AAAT,CAAR,MAAqD;AAC5ER,EAAAA,UAAU,EAAEH,oBAAoB,CAACW,YAAD,CAApB,CAAmCiB,KAAnC;AADgE,CAArD,CAAxB;;AAIA,eAAe9B,UAAU,CAACD,OAAO,CAAC8B,eAAD,CAAP,CAAyBzB,cAAzB,CAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { firestore } from '../../firebase/firebase.utils';\nimport { selectShopCollection } from '../../redux/shop/shop.selectors';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport './collection.styles.scss';\n\nconst CollectionPage = ({ collection, match }) => {\n\tuseEffect(() => {\n\t\tconst unsubscribeFromCollections = firestore.collection('collections').onSnapshot((snapshot) => console.log(snapshot));\n\t\treturn () => {\n\t\t\tunsubscribeFromCollections();\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className=\"collection\">\n\t\t\t<h2 className=\"title\">{match.params.collectionId}</h2>\n\t\t\t{\n\t\t\t\tcollection.items.map((item) => <CollectionItem key={item.id} item={item} />)\n\t\t\t}\n\t\t</div>\n\t);\n};\n\n\nCollectionPage.propTypes = {\n\tcollection: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\ttitle: PropTypes.string.isRequired,\n\t\trouteName: PropTypes.string.isRequired,\n\t\titems: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tid: PropTypes.number.isRequired,\n\t\t\t\tname: PropTypes.string.isRequired,\n\t\t\t\timageUrl: PropTypes.string.isRequired,\n\t\t\t\tprice: PropTypes.number.isRequired,\n\t\t\t}).isRequired,\n\t\t),\n\t}).isRequired,\n\tmatch: ReactRouterPropTypes.match.isRequired,\n};\n\nconst mapStateToProps = (state, { match: { params: { collectionId } } }) => ({\n\tcollection: selectShopCollection(collectionId)(state),\n});\n\nexport default withRouter(connect(mapStateToProps)(CollectionPage));\n"]},"metadata":{},"sourceType":"module"}