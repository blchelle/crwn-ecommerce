{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHiddenAction } from '../../redux/cart/cart.actions';\nimport CartItem from '../cart-item/cart-item.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  items,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 2\n  }\n}, items.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 6\n  }\n}, \"You currently have no items in the cart\") : /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, items.map(item => /*#__PURE__*/React.createElement(CartItem, {\n  key: items.id,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 27\n  }\n}))), items.length === 0 ? null : /*#__PURE__*/React.createElement(CustomButton, {\n  className: \"button\",\n  type: \"button\",\n  handleClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHiddenAction());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, \"Go to checkout\"));\n\nCartDropdown.defaultProps = {\n  items: []\n};\nCartDropdown.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string.isRequired\n  }).isRequired),\n  history: ReactRouterPropTypes.history.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  items: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","PropTypes","connect","withRouter","ReactRouterPropTypes","createStructuredSelector","selectCartItems","toggleCartHiddenAction","CartItem","CustomButton","CartDropdown","items","history","dispatch","length","map","item","id","push","defaultProps","propTypes","arrayOf","shape","name","string","isRequired","price","number","quantity","imageUrl","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,sBAAT,QAAuC,+BAAvC;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,kBACpB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEF,KAAK,CAACG,MAAN,KAAiB,CAAjB,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,gBAEC;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEEH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBAAU,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEL,KAAK,CAACM,EAArB;AAAyB,EAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAApB,CAFF,CAHH,EASEL,KAAK,CAACG,MAAN,KAAiB,CAAjB,GACE,IADF,gBAGC,oBAAC,YAAD;AACC,EAAA,SAAS,EAAC,QADX;AAEC,EAAA,IAAI,EAAC,QAFN;AAGC,EAAA,WAAW,EAAE,MAAM;AAClBF,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACN,sBAAsB,EAAvB,CAAR;AACA,GANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZH,CADD;;AA2BAG,YAAY,CAACS,YAAb,GAA4B;AAC3BR,EAAAA,KAAK,EAAE;AADoB,CAA5B;AAIAD,YAAY,CAACU,SAAb,GAAyB;AACxBT,EAAAA,KAAK,EAAEV,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,KAAV,CAAgB;AACxCC,IAAAA,IAAI,EAAEtB,SAAS,CAACuB,MAAV,CAAiBC,UADiB;AAExCC,IAAAA,KAAK,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBF,UAFgB;AAGxCG,IAAAA,QAAQ,EAAE3B,SAAS,CAAC0B,MAAV,CAAiBF,UAHa;AAIxCI,IAAAA,QAAQ,EAAE5B,SAAS,CAACuB,MAAV,CAAiBC;AAJa,GAAhB,EAKtBA,UALI,CADiB;AAOxBb,EAAAA,OAAO,EAAER,oBAAoB,CAACQ,OAArB,CAA6Ba,UAPd;AAQxBZ,EAAAA,QAAQ,EAAEZ,SAAS,CAAC6B,IAAV,CAAeL;AARD,CAAzB;AAWA,MAAMM,eAAe,GAAG1B,wBAAwB,CAAC;AAChDM,EAAAA,KAAK,EAAEL;AADyC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACD,OAAO,CAAC6B,eAAD,CAAP,CAAyBrB,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHiddenAction } from '../../redux/cart/cart.actions';\nimport CartItem from '../cart-item/cart-item.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ items, history, dispatch }) => (\n\t<div className=\"cart-dropdown\">\n\t\t{items.length === 0\n\t\t\t? <p>You currently have no items in the cart</p> : (\n\t\t\t\t<div className=\"cart-items\">\n\t\t\t\t\t{\n\t\t\t\t\t\titems.map((item) => <CartItem key={items.id} item={item} />)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t{items.length === 0\n\t\t\t? null\n\t\t\t: (\n\t\t\t\t<CustomButton\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\thandleClick={() => {\n\t\t\t\t\t\thistory.push('/checkout');\n\t\t\t\t\t\tdispatch(toggleCartHiddenAction());\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tGo to checkout\n\t\t\t\t</CustomButton>\n\t\t\t)}\n\t</div>\n);\n\nCartDropdown.defaultProps = {\n\titems: [],\n};\n\nCartDropdown.propTypes = {\n\titems: PropTypes.arrayOf(PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tprice: PropTypes.number.isRequired,\n\t\tquantity: PropTypes.number.isRequired,\n\t\timageUrl: PropTypes.string.isRequired,\n\t}).isRequired),\n\thistory: ReactRouterPropTypes.history.isRequired,\n\tdispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n\titems: selectCartItems,\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}