{"ast":null,"code":"import UserActionTypes from './user.types';\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return { ...state,\n        currentUser: null,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_UP_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","error","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE","SIGN_OUT_SUCCESS","SIGN_UP_SUCCESS"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,WAAW,EAAE;AADQ,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKN,eAAe,CAACO,eAArB;AACC,aAAO,EACN,GAAGH,KADG;AAENF,QAAAA,WAAW,EAAEG,MAAM,CAACG,OAFd;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAP;;AAKD,SAAKT,eAAe,CAACU,eAArB;AACA,SAAKV,eAAe,CAACW,gBAArB;AACA,SAAKX,eAAe,CAACY,eAArB;AACC,aAAO,EACN,GAAGR,KADG;AAENK,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFR,OAAP;;AAID,SAAKR,eAAe,CAACa,gBAArB;AACC,aAAO,EACN,GAAGT,KADG;AAENF,QAAAA,WAAW,EAAE,IAFP;AAGNO,QAAAA,KAAK,EAAE;AAHD,OAAP;;AAKD,SAAKT,eAAe,CAACc,eAArB;AACC,aAAO,EACN,GAAGV,KADG;AAENF,QAAAA,WAAW,EAAEG,MAAM,CAACG,OAFd;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAP;;AAKD;AACC,aAAOL,KAAP;AA3BD;AA6BA,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from './user.types';\n\nconst INITIAL_STATE = {\n\tcurrentUser: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\tcase UserActionTypes.SIGN_IN_SUCCESS:\n\t\treturn {\n\t\t\t...state,\n\t\t\tcurrentUser: action.payload,\n\t\t\terror: null,\n\t\t};\n\tcase UserActionTypes.SIGN_IN_FAILURE:\n\tcase UserActionTypes.SIGN_OUT_FAILURE:\n\tcase UserActionTypes.SIGN_UP_FAILURE:\n\t\treturn {\n\t\t\t...state,\n\t\t\terror: action.payload,\n\t\t};\n\tcase UserActionTypes.SIGN_OUT_SUCCESS:\n\t\treturn {\n\t\t\t...state,\n\t\t\tcurrentUser: null,\n\t\t\terror: null,\n\t\t};\n\tcase UserActionTypes.SIGN_UP_SUCCESS:\n\t\treturn {\n\t\t\t...state,\n\t\t\tcurrentUser: action.payload,\n\t\t\terror: null,\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}