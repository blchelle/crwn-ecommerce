{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStartAction, emailSignInStartAction } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = async (event, setFn) => {\n    const {\n      value\n    } = event.target;\n    setFn(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-in-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: \"email\",\n    handleChange: e => handleChange(e, setEmail),\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    handleChange: e => handleChange(e, setPassword),\n    label: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    handleClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    handleClick: googleSignInStart,\n    type: \"button\",\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, \"Sign in with google\"))));\n};\n\nSignIn.propTypes = {\n  googleSignInStart: PropTypes.func.isRequired,\n  emailSignInStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStartAction()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStartAction({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","PropTypes","connect","FormInput","CustomButton","googleSignInStartAction","emailSignInStartAction","SignIn","emailSignInStart","googleSignInStart","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","handleChange","setFn","value","target","e","propTypes","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStartAction, emailSignInStartAction } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\temailSignInStart(email, password);\n\t};\n\n\tconst handleChange = async (event, setFn) => {\n\t\tconst { value } = event.target;\n\t\tsetFn(value);\n\t};\n\n\treturn (\n\t\t<div className=\"sign-in\">\n\t\t\t<h2 className=\"title\">I already have an account</h2>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form className=\"sign-in-form\" onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\thandleChange={(e) => handleChange(e, setEmail)}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\thandleChange={(e) => handleChange(e, setPassword)}\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<CustomButton handleClick={handleSubmit} type=\"submit\">\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</CustomButton>\n\t\t\t\t\t<CustomButton handleClick={googleSignInStart} type=\"button\" isGoogleSignIn>\n\t\t\t\t\t\tSign in with google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nSignIn.propTypes = {\n\tgoogleSignInStart: PropTypes.func.isRequired,\n\temailSignInStart: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStartAction()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStartAction({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}