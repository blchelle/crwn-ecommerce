{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock.chelle\\\\git\\\\crwn-ecommerce-app\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signUpStartAction } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = async (event, setFn) => {\n    const {\n      value\n    } = event.target;\n    setFn(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: e => handleChange(e, setDisplayName),\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: e => handleChange(e, setEmail),\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: e => handleChange(e, setPassword),\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: e => handleChange(e, setConfirmPassword),\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    handleClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Sign Up\")));\n};\n\nSignUp.propTypes = {\n  signUpStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStartAction(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/brock.chelle/git/crwn-ecommerce-app/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","PropTypes","connect","signUpStartAction","FormInput","CustomButton","SignUp","signUpStart","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","event","preventDefault","alert","handleChange","setFn","value","target","e","propTypes","func","isRequired","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signUpStartAction } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => {\n\tconst [displayName, setDisplayName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [confirmPassword, setConfirmPassword] = useState('');\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (password !== confirmPassword) {\n\t\t\talert('passwords do not match');\n\t\t}\n\n\t\tsignUpStart({ displayName, email, password });\n\t};\n\n\tconst handleChange = async (event, setFn) => {\n\t\tconst { value } = event.target;\n\t\tsetFn(value);\n\t};\n\n\treturn (\n\t\t<div className=\"sign-up\">\n\t\t\t<h2 className=\"title\">I do not have an account</h2>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className=\"sign-up-form\" onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\thandleChange={(e) => handleChange(e, setDisplayName)}\n\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\thandleChange={(e) => handleChange(e, setEmail)}\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\thandleChange={(e) => handleChange(e, setPassword)}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\thandleChange={(e) => handleChange(e, setConfirmPassword)}\n\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type=\"submit\" handleClick={handleSubmit}>Sign Up</CustomButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\n\nSignUp.propTypes = {\n\tsignUpStart: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsignUpStart: (userCredentials) => dispatch(signUpStartAction(userCredentials)),\n});\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}